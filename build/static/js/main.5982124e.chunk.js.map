{"version":3,"sources":["components/navBar.jsx","components/service/user.js","components/visitorsInputForm.jsx","components/login.jsx","components/logout.jsx","components/visitorsDetails.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","_ref","user","react_default","a","createElement","className","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Fragment","NavLink","name","password","getUser","setUser","data","Object","objectSpread","VisitorInputForm","state","visitPurpose","setVisitPurpose","event","console","log","target","value","this","setState","role","onChange","map","purpose","key","Redirect","Component","LoginForm","username","loginTypes","setectedUserType","_this","submit","_this$state","window","location","changePassword","changeUser","undefined","onClick","Logout","VisitorDetails","visitorDetails","owner","permission","getThumbClass","status","_this2","visitor","aria-hidden","fill","App","navBar","Switch","Route","path","component","from","exact","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","BrowserRouter","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5982124e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nconst NavBar = ({ user }) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n\n      <Link className=\"navbar-brand\" to=\"/\">\n        Visitors Trackng\n        </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <ul className=\"navbar-nav\">\n          {user && user.type === 'Security' &&\n            < React.Fragment >\n              <NavLink className=\"nav-item nav-link\" to=\"/visitorForm\">\n                Visitor Form\n            </NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/visitorDetails\">\n                Visitor Details\n          </NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">\n                Logout\n          </NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/\">\n                {user.name}\n              </NavLink>\n\n            </React.Fragment>\n          }\n          {!user && <NavLink className=\"nav-item nav-link\" to=\"/login\">\n            Login\n          </NavLink>}\n          {!user && <NavLink className=\"nav-item nav-link\" to=\"/register\">\n            Register\n            </NavLink>}\n        </ul>\n      </div>\n\n    </nav>\n  );\n};\nexport default NavBar;\n","let user = {\n    name: \"Navneet\",\n    type: 'Security',\n    id: 123,\n    password: 123\n}\n\nexport function getUser() {\n    return user;\n}\nexport function setUser(data) {\n    user = { ...data };\n}","import React, { Component } from \"react\";\nimport { getUser } from './service/user'\nimport { Redirect } from 'react-router-dom';\n\nclass VisitorInputForm extends Component {\n  state = {\n    visitPurpose: ['delivery', 'guest', 'plumbing', 'made'],\n    user: ''\n  };\n  setVisitPurpose = event => {\n    console.log(event.target.value)\n  }\n  componentDidMount() {\n    const user = getUser();\n    this.setState({ user });\n    console.log(\"user\");\n    console.log(user);\n  }\n  render() {\n    const user = getUser();\n    if (!user) return <Redirect to=\"/login\" />\n    return (\n      <div>\n        <main role=\"main\" className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-3\" />\n            <div className=\"col\">\n              <table>\n                <thead>\n                  <tr>\n                    <th />\n                    <th>\n                      {\" \"}\n                      <h1>Enter Visitor details</h1>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>\n                      <label className=\"m-2\">Name</label>\n                    </td>\n                    <td>\n                      <input\n                        type=\"text\"\n                        className=\" m-2 form-control form-control-sm\"\n                        id=\"vname\"\n                      />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <label className=\"m-2\">To Whome Contact</label>\n                    </td>\n                    <td>\n                      <input\n                        type=\"text\"\n                        className=\" m-2 form-control form-control-sm\"\n                        id=\"purpose\"\n                      />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <label className=\"m-2\">Purpose</label>\n                    </td>\n                    <td>\n                      <select className=\"custom-select custom-select-sm\" onChange={this.setVisitPurpose}>\n                        {this.state.visitPurpose.map(purpose => <option value={purpose} key={purpose}> {purpose}</option>)}\n                      </select>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-primary form-control-sm\"\n                      >\n                        Submit\n                      </button>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default VisitorInputForm;\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { setUser } from \"./service/user\"\nclass LoginForm extends Component {\n    state = {\n        username: '',\n        type: '',\n        password: '',\n        loginTypes: ['Admin', 'Owner', 'Security']\n    };\n    setectedUserType = event => {\n        this.setState({ type: event.target.value })\n        console.log(event.target.value);\n    }\n    submit = () => {\n        console.log(\"submit\")\n        const { username, password, type } = this.state;\n        const user = { username, password, type };\n        setUser(user);\n        console.log(\"user\");\n        console.log(user);\n        //<Redirect to=\"/visitorform\" />\n        window.location = \"/\";\n    }\n    changePassword = event => {\n        this.setState({ password: event.target.value })\n    }\n    changeUser = event => {\n        this.setState({ username: event.target.value })\n    }\n    render() {\n        const user = undefined;\n        console.log(user)\n        if (user) return <Redirect to=\"/\" />\n        return (\n            <div>\n                <main role=\"main\" className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-3\" />\n                        <div className=\"col\">\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th />\n                                        <th>\n                                            {\" \"}\n                                            <h1>Login Form</h1>\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            <label className=\"m-2\">User Name</label>\n                                        </td>\n                                        <td>\n                                            <input\n                                                onChange={this.changeUser}\n                                                type=\"text\"\n                                                className=\" m-2 form-control form-control-sm\"\n                                                id=\"vname\"\n                                            />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <label className=\"m-2\">Password</label>\n                                        </td>\n                                        <td>\n                                            <input\n                                                type=\"text\"\n                                                onChange={this.changePassword}\n                                                className=\" m-2 form-control form-control-sm\"\n                                                id=\"purpose\"\n                                            />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <label className=\"m-2\"></label>\n                                        </td>\n                                        <td>\n                                            <select className=\"custom-select custom-select-sm\" onChange={this.setectedUserType}>\n                                                {this.state.loginTypes.map(type => <option key={type} value={type}>{type}</option>)}\n                                            </select>\n                                        </td>\n                                    </tr>\n                                    <tr className=\"mt-2\" >\n                                        <td>\n\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                            <div className=\"mt-3\">\n                                <button\n                                    type=\"submit\"\n                                    onClick={this.submit}\n                                    className=\"btn btn-primary mr-5 form-control-sm\"\n                                >\n                                    Login\n                                        </button>\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-primary form-control-sm\"\n                                >\n                                    Reset\n                                        </button>\n                            </div>\n                        </div>\n                    </div>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { setUser } from './service/user'\nconst Logout = () => {\n    setUser();\n    return <Redirect to=\"/login\" />\n}\n\nexport default Logout;","import React, { Component } from 'react';\nclass VisitorDetails extends Component {\n    state = {\n        visitorDetails: [\n            {\n                id: 123,\n                name: 'abc1',\n                purpose: 'delivery',\n                owner: '202',\n                permission: false\n            },\n            {\n                id: 1234,\n                name: 'abc2',\n                purpose: 'delivery',\n                owner: '102',\n                permission: false\n            },\n            {\n                id: 1235,\n                name: 'abc3',\n                purpose: 'guest',\n                owner: '502',\n                permission: false\n            },\n            {\n                id: 1236,\n                name: 'abc4',\n                purpose: 'delivery',\n                owner: '405',\n                permission: true\n            },\n            {\n                id: 1237,\n                name: 'abc5',\n                purpose: 'Gust',\n                owner: '303',\n                permission: true\n            },\n        ]\n    };\n    getThumbClass = status => {\n        console.log(status)\n        return status ? \"fa fa-thumbs-up colGreen\" : \"fa fa-thumbs-down colRed\"\n    }\n    render() {\n        return (\n            <div>\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>name</th>\n                            <th>purpose</th>\n                            <th>owner</th>\n                            <th>permission</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.visitorDetails.map(visitor => {\n                            return (\n                                <tr key={visitor.id}>\n                                    <td>{visitor.name}</td>\n                                    <td>{visitor.purpose}</td>\n                                    <td>{visitor.owner}</td>\n                                    <td><i className={this.getThumbClass(visitor.permission)} aria-hidden=\"true\" fill=\"red\"></i></td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table></div>\n        );\n    }\n}\nexport default VisitorDetails; ","import React from \"react\";\nimport \"./App.css\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport NavBar from \"./components/navBar\";\nimport VisitorInputForm from \"./components/visitorsInputForm\";\nimport LoginForm from \"./components/login\";\nimport Logout from \"./components/logout\";\nimport VisitorDetails from \"./components/visitorsDetails\";\nimport { getUser } from \"./components/service/user\";\nfunction App() {\n\n  const user = getUser();\n  return (\n    <React.Fragment>\n      <NavBar user={user} />\n      <main className=\"container\">\n        <Switch>\n          <Route path=\"/login\" component={LoginForm} />\n          <Route path=\"/visitorform\" component={VisitorInputForm} />\n          <Route path=\"/visitordetails\" component={VisitorDetails} />\n          <Route path=\"/logout\" component={Logout} />\n          <Redirect from=\"/\" exact to=\"/visitorform\" />\n          <Redirect to=\"/visitorform\" />\n        </Switch>\n      </main>\n    </React.Fragment>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from 'react-router-dom';\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n//serviceWorker.unregister();\n"],"sourceRoot":""}